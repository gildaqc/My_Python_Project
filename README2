% ssh quezadgc@ilogin.ibex.kaust.edu.sa

$ mkdir gene_finder
$ ls
$ cd gene_finder
$ git init #This is to initiate Git
$ nano gene_finder.py #We create a python file 


##1. Your tool should read a FASTA file, and output any region between a start (‘ATG’) and stop codon (‘TAA’, ‘TAG’, ‘TGA’) in that FASTA file

###PYTHON CODE IN gene_finder.py
import sys
def read_fasta(filename):
    # Reads a FASTA file and returns the genome sequence as a string
    with open(filename, 'r') as file:
        genome = ''.join(line.strip() for line in file if not line.startswith('>'))
    return genome

def find_genes(genome, start_codon='ATG', stop_codons=('TAA', 'TAG', 'TGA')):
    # Finds and returns the sequences between the start codon 'ATG' and any of >
    genes = []    
    # Iterate over the three possible reading frames
    for frame in range(3):
        i = frame
        while i < len(genome) - 2:
            codon = genome[i:i+3]       
            # If a start codon is found
            if codon == start_codon:
                # Look for the next stop codon
                for j in range(i+3, len(genome)-2, 3):
                    stop_codon = genome[j:j+3]
                    if stop_codon in stop_codons:
                        # Extract gene sequence
                        gene = genome[i:j+3]
                        genes.append(gene)
                        break
            i += 3 
    return genes

def main():
    # Check for the correct number of arguments
    if len(sys.argv) != 2:
        print("Usage: python gene_finder.py <input_fasta>")
        sys.exit(1)
    # Get the input file from command-line arguments
    input_file = sys.argv[1]
    # Read the genome from the FASTA file
    genome = read_fasta(input_file)
    # Find genes in the genome sequence
    genes = find_genes(genome)
    # Output the found genes
    if genes:
	for index, gene in enumerate(genes, 1):
            print(f"Gene {index}: {gene}")
    else:
	print("No genes found.")
if __name__ == "__main__":
    main()                

#RETURNED TO THE SHELL
                         
